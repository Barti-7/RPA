<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="844,3873.3333333333335" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/ocr" xmlns:p2="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p5="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p6="http://schemas.uipath.com/workflow/activities/documentunderstanding-ml" xmlns:p7="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p8="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p9="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:sd2="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="94">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities.Editors</x:String>
      <x:String>UiPath.IntelligentOCR.Actions.Models</x:String>
      <x:String>UiPath.IntelligentOCR.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="64">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="723.3333333333334,3808.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="p9:DocumentTaxonomy" Name="taxonomy" />
      <Variable x:TypeArguments="x:String" Name="document_path" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="661.3333333333334,108" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[taxonomy]" />
    <Assign sap:VirtualizedContainerService.HintSize="661.3333333333334,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[document_path]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">D:\Bharathi\Desktop\HG\POC-Health and glow\Incoices</InArgument>
      </Assign.Value>
    </Assign>
    <ParallelForEach x:TypeArguments="x:String" DisplayName="Parallel For Each" sap:VirtualizedContainerService.HintSize="661.3333333333334,3424.6666666666665" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_1" Values="[Directory.getfiles( document_path)]">
      <ActivityAction x:TypeArguments="x:String">
        <ActivityAction.Argument>
          <DelegateInArgument x:TypeArguments="x:String" Name="doc" />
        </ActivityAction.Argument>
        <Sequence sap:VirtualizedContainerService.HintSize="610.6666666666666,3270.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="parallel for each" sap:VirtualizedContainerService.HintSize="548.6666666666666,3160" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="doc_text" />
              <Variable x:TypeArguments="p4:Document" Name="DOM" />
              <Variable x:TypeArguments="p7:ClassificationResult[]" Name="classification_results" />
              <Variable x:TypeArguments="p7:ExtractionResult" Name="extraction_result" />
              <Variable x:TypeArguments="p:DocumentValidationActionData" Name="Action_Output" />
              <Variable x:TypeArguments="p7:ExtractionResult" Name="Validated_extraction_result" />
              <Variable x:TypeArguments="sd2:DataSet" Name="Dataset" />
              <Variable x:TypeArguments="x:String" Name="file_path" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <p:DigitizeDocument ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="Digitize Document" DocumentObjectModel="[DOM]" DocumentPath="[doc.tostring]" DocumentText="[doc_text]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="486.6666666666667,307.3333333333333" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
              <p:DigitizeDocument.OCREngine>
                <ActivityFunc x:TypeArguments="sd:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))" Argument1="{x:Reference __ReferenceID0}" Argument2="{x:Reference __ReferenceID1}">
                  <p1:UiPathDocumentOCR Endpoint="{x:Null}" Output="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ApiKey="zGfEmYhE+bGKDvd5Ajmr+O3C8bJL6wKMqChvwglTdErG3r6YfuwDJjfo1ABZ82IvSAzYLMStFCtbA+oaMDAZFw==" ComputeSkewAngle="False" DisplayName="UiPath Document OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,25.333333333333332" sap2010:WorkflowViewState.IdRef="UiPathDocumentOCR_1" Language="auto" Profile="None" Scale="1" Timeout="100000">
                    <p1:UiPathDocumentOCR.Image>
                      <InArgument x:TypeArguments="sd:Image">
                        <DelegateArgumentValue x:TypeArguments="sd:Image" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_1">
                          <DelegateInArgument x:TypeArguments="sd:Image" x:Name="__ReferenceID0" Name="Image" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p1:UiPathDocumentOCR.Image>
                    <p1:UiPathDocumentOCR.PredictionId>
                      <InArgument x:TypeArguments="x:String">
                        <DelegateArgumentValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_2">
                          <DelegateInArgument x:TypeArguments="x:String" x:Name="__ReferenceID1" Name="PredictionId" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p1:UiPathDocumentOCR.PredictionId>
                  </p1:UiPathDocumentOCR>
                </ActivityFunc>
              </p:DigitizeDocument.OCREngine>
            </p:DigitizeDocument>
            <p2:ClassifyDocumentScope ClassificationResults="[classification_results]" DisplayName="Classify Document Scope" DocumentObjectModel="[DOM]" DocumentPath="[doc]" DocumentText="[doc_text]" sap:VirtualizedContainerService.HintSize="486.6666666666667,550" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI4a8255295ffe4993a97c641bd51805f2&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;invoices_hg.bills_hg.invoice&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;invoices_hg.bills_hg.invoice&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI4a8255295ffe4993a97c641bd51805f2&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI4a8255295ffe4993a97c641bd51805f2&quot;:[]}}">
              <p2:ClassifyDocumentScope.Classifiers>
                <p2:IntelligentKeywordClassifier LearningData="{x:Null}" TimeoutMs="{x:Null}" ApiKey="WEf761D17RwcohF+txGvluOZz8w5L3JKo52F9cG1uGRnf0cCnLhoZcKs1XoKMVC4B+nSMgoAVJBVsVSPpFQxgw==" DisplayName="Intelligent Keyword Classifier" Endpoint="https://du.uipath.com/svc/intelligentkeywords" sap:VirtualizedContainerService.HintSize="234,216" sap2010:WorkflowViewState.IdRef="IntelligentKeywordClassifier_1" LearningFilePath="DocumentProcessing\learning.json" PerformDocumentSplitting="True" PersistenceId="UI4a8255295ffe4993a97c641bd51805f2" UsePageNumbers="False">
                  <p2:IntelligentKeywordClassifier.ClassifierResult>
                    <OutArgument x:TypeArguments="p3:ClassifierResult">
                      <DelegateArgumentReference x:TypeArguments="p3:ClassifierResult">
                        <DelegateOutArgument x:TypeArguments="p3:ClassifierResult" Name="ClassifierResult" />
                      </DelegateArgumentReference>
                    </OutArgument>
                  </p2:IntelligentKeywordClassifier.ClassifierResult>
                  <p2:IntelligentKeywordClassifier.DocumentObjectModel>
                    <InArgument x:TypeArguments="p4:Document">
                      <DelegateArgumentValue x:TypeArguments="p4:Document">
                        <DelegateInArgument x:TypeArguments="p4:Document" Name="DocumentObjectModel" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p2:IntelligentKeywordClassifier.DocumentObjectModel>
                  <p2:IntelligentKeywordClassifier.DocumentPath>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p2:IntelligentKeywordClassifier.DocumentPath>
                  <p2:IntelligentKeywordClassifier.DocumentText>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p2:IntelligentKeywordClassifier.DocumentText>
                  <p2:IntelligentKeywordClassifier.DocumentTypes>
                    <InArgument x:TypeArguments="p3:ClassifierDocumentType[]">
                      <DelegateArgumentValue x:TypeArguments="p3:ClassifierDocumentType[]">
                        <DelegateInArgument x:TypeArguments="p3:ClassifierDocumentType[]" Name="DocumentTypes" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p2:IntelligentKeywordClassifier.DocumentTypes>
                  <p2:IntelligentKeywordClassifier.PredictionId>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p2:IntelligentKeywordClassifier.PredictionId>
                </p2:IntelligentKeywordClassifier>
              </p2:ClassifyDocumentScope.Classifiers>
            </p2:ClassifyDocumentScope>
            <p5:DataExtractionScope DocumentTypeId="{x:Null}" ClassificationResult="[classification_results(0)]" DisplayName="Data Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="[doc]" DocumentText="[doc_text]" ExtractionResult="[extraction_result]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="486.6666666666667,533.3333333333334" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI6cc0cfc5fbda4052abad43be99f7d20e&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;invoices_hg.bills_hg.invoice&quot;:{&quot;FieldMappings&quot;:{&quot;invoices_hg.bills_hg.invoice.po_number&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;invoices_hg.bills_hg.invoice.po_number&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;po_number\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;invoices_hg.bills_hg.invoice.invoice_number&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;invoices_hg.bills_hg.invoice.invoice_number&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;invoice_number\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;invoices_hg.bills_hg.invoice.invoice_date&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;invoices_hg.bills_hg.invoice.invoice_date&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;invoice_date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;invoices_hg.bills_hg.invoice.sgst_amount&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;invoices_hg.bills_hg.invoice.sgst_amount&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;sgst_amount\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;invoices_hg.bills_hg.invoice.vendor_name&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;invoices_hg.bills_hg.invoice.vendor_name&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;vendor_name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;invoices_hg.bills_hg.invoice.vendor_address&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;invoices_hg.bills_hg.invoice.vendor_address&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;vendor_address\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;invoices_hg.bills_hg.invoice.invoice_total&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;invoices_hg.bills_hg.invoice.invoice_total&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;invoice_total\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;invoices_hg.bills_hg.invoice.cgst_amount&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;invoices_hg.bills_hg.invoice.cgst_amount&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;cgst_amount\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;invoices_hg.bills_hg.invoice.gstn&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;invoices_hg.bills_hg.invoice.gstn&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;gstn\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;invoices_hg.bills_hg.invoice.total_tax&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;invoices_hg.bills_hg.invoice.total_tax&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;total_tax\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI6cc0cfc5fbda4052abad43be99f7d20e&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI6cc0cfc5fbda4052abad43be99f7d20e&quot;:[{&quot;FieldId&quot;:&quot;&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;po_number&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;invoice_number&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;invoice_date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;sgst_amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor_name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;vendor_address&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;invoice_total&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;cgst_amount&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;gstn&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;total_tax&quot;,&quot;SubOptions&quot;:null}]}]}}">
              <p5:DataExtractionScope.Extractors>
                <p6:MachineLearningExtractor Endpoint="{x:Null}" SelectedMLSkill="{x:Null}" ApiKey="WEf761D17RwcohF+txGvluOZz8w5L3JKo52F9cG1uGRnf0cCnLhoZcKs1XoKMVC4B+nSMgoAVJBVsVSPpFQxgw==" Configuration="{}{&quot;Endpoint&quot;:&quot;&quot;,&quot;ApiKey&quot;:&quot;WEf761D17RwcohF+txGvluOZz8w5L3JKo52F9cG1uGRnf0cCnLhoZcKs1XoKMVC4B+nSMgoAVJBVsVSPpFQxgw==&quot;,&quot;SelectedMLSkill&quot;:&quot;HG_MLSkill&quot;,&quot;AvailableMLSkills&quot;:[&quot;Atul_mlskill&quot;,&quot;HG_MLSkill&quot;]}" DisplayName="Machine Learning Extractor" sap:VirtualizedContainerService.HintSize="254.66666666666666,199.33333333333334" sap2010:WorkflowViewState.IdRef="MachineLearningExtractor_1" PersistenceId="UI6cc0cfc5fbda4052abad43be99f7d20e" RetryOnFailure="True" Timeout="100000" UseServerSideOCR="False">
                  <p6:MachineLearningExtractor.AvailableMLSkills>
                    <scg:List x:TypeArguments="x:String" Capacity="0" />
                  </p6:MachineLearningExtractor.AvailableMLSkills>
                  <p6:MachineLearningExtractor.DocumentBounds>
                    <InArgument x:TypeArguments="p7:ResultsDocumentBounds">
                      <DelegateArgumentValue x:TypeArguments="p7:ResultsDocumentBounds">
                        <DelegateInArgument x:TypeArguments="p7:ResultsDocumentBounds" Name="DocumentBounds" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p6:MachineLearningExtractor.DocumentBounds>
                  <p6:MachineLearningExtractor.DocumentObjectModel>
                    <InArgument x:TypeArguments="p4:Document">
                      <DelegateArgumentValue x:TypeArguments="p4:Document">
                        <DelegateInArgument x:TypeArguments="p4:Document" Name="DocumentObjectModel" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p6:MachineLearningExtractor.DocumentObjectModel>
                  <p6:MachineLearningExtractor.DocumentPath>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p6:MachineLearningExtractor.DocumentPath>
                  <p6:MachineLearningExtractor.DocumentText>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p6:MachineLearningExtractor.DocumentText>
                  <p6:MachineLearningExtractor.ExtractorDocumentType>
                    <InArgument x:TypeArguments="p8:ExtractorDocumentType">
                      <DelegateArgumentValue x:TypeArguments="p8:ExtractorDocumentType">
                        <DelegateInArgument x:TypeArguments="p8:ExtractorDocumentType" Name="ExtractorDocumentType" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p6:MachineLearningExtractor.ExtractorDocumentType>
                  <p6:MachineLearningExtractor.ExtractorResult>
                    <OutArgument x:TypeArguments="p8:ExtractorResult">
                      <DelegateArgumentReference x:TypeArguments="p8:ExtractorResult">
                        <DelegateOutArgument x:TypeArguments="p8:ExtractorResult" Name="ExtractorResult" />
                      </DelegateArgumentReference>
                    </OutArgument>
                  </p6:MachineLearningExtractor.ExtractorResult>
                  <p6:MachineLearningExtractor.PredictionId>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p6:MachineLearningExtractor.PredictionId>
                </p6:MachineLearningExtractor>
              </p5:DataExtractionScope.Extractors>
            </p5:DataExtractionScope>
            <p:CreateDocumentValidationAction FolderPath="{x:Null}" TimeoutMs="{x:Null}" ActionCatalog="[&quot;HG_invoice_process&quot;]" ActionOutput="[Action_Output]" ActionPriority="Medium" ActionTitle="[&quot;invoice_hg&quot;+&quot;-&quot;+doc]" AutomaticExtractionResults="[extraction_result]" BucketFolderPath="/Shared" BucketName="HG_action_bucket" DisplayName="Create Document Validation Action" DocumentObjectModel="[DOM]" DocumentPath="[doc]" DocumentText="[doc_text]" sap:VirtualizedContainerService.HintSize="486.6666666666667,382" sap2010:WorkflowViewState.IdRef="CreateDocumentValidationAction_1" ShowOnlyRelevantPageRange="False" Taxonomy="[taxonomy]" />
            <p:WaitForDocumentValidationActionAndResume ActionOutput="{x:Null}" StatusMessage="{x:Null}" TimeoutMs="{x:Null}" WaitItemDataObject="{x:Null}" ActionInput="[Action_Output]" AutomaticExtractionResults="[extraction_result]" DisplayName="Wait For Document Validation Action And Resume" DocumentObjectModel="[DOM]" DocumentPath="[doc]" DocumentText="[doc_text]" DownloadFolderPath="C:\Users\Bharathi\Downloads" sap:VirtualizedContainerService.HintSize="486.6666666666667,373.3333333333333" sap2010:WorkflowViewState.IdRef="WaitForDocumentValidationActionAndResume_1" RemoveDataFromStorage="False" Taxonomy="[taxonomy]" ValidatedExtractionResults="[Validated_extraction_result]" />
            <p5:ExportExtractionResults DataSet="[Dataset]" DisplayName="Export Extraction Results" ExtractionResult="[Validated_extraction_result]" sap:VirtualizedContainerService.HintSize="486.6666666666667,182" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" IncludeOCRConfidence="False" />
            <Assign sap:VirtualizedContainerService.HintSize="486.6666666666667,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[file_path]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension( doc.ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="sd2:DataTable" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="486.6666666666667,356" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Dataset.Tables]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="sd2:DataTable">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd2:DataTable" Name="tables" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="450,226.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="False" DataTable="[tables]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="358,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[tables.TableName]" WorkbookPath="[&quot;C:\Users\Bharathi\Desktop\HG\POC-Health and glow\Output\&quot;+&quot;-&quot;+file_path+&quot;.xlsx&quot;]" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </Sequence>
      </ActivityAction>
    </ParallelForEach>
  </Sequence>
</Activity>